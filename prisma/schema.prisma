// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]  // Required for pgvector
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [vector]  // Enable pgvector extension
}

model User {
  id        String         @id @default(uuid())
  email     String         @unique
  password  String
  apiKey    String?
  documents Document[]
  sessions  Session[]
  conversations Conversation[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Document {
  id          String         @id @default(uuid())
  title       String
  url         String
  blobPath    String
  userId      String
  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  chunks      DocumentChunk[]
  conversation Conversation?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model DocumentChunk {
  id           String   @id @default(uuid())
  content      String
  pageNumber   Int
  embedding    Unsupported("vector(768)")  // Using Unsupported for vector type
  documentId   String
  document     Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  positionData Json?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Conversation {
  id         String    @id @default(uuid())
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  documentId String    @unique
  document   Document  @relation(fields: [documentId], references: [id], onDelete: Cascade)
  messages   Message[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Message {
  id             String       @id @default(uuid())
  content        String
  role           String       // user, assistant, system
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  context        Json?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}